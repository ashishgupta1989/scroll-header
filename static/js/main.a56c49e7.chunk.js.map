{"version":3,"sources":["logo.svg","react-headroom-forked/index.js","react-headroom-forked/shouldUpdate.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","noop","Headroom","props","setRef","ref","inner","setHeightOffset","setState","height","offsetHeight","resizeTicking","getScrollY","undefined","parent","pageYOffset","scrollTop","document","documentElement","body","parentNode","getViewportHeight","window","innerHeight","clientHeight","getDocumentHeight","Math","max","scrollHeight","getElementPhysicalHeight","elm","getElementHeight","getScrollerPhysicalHeight","getScrollerHeight","isOutOfBound","currentScrollY","pastTop","scrollerPhysicalHeight","scrollerHeight","handleScroll","scrollTicking","raf","update","handleResize","unpin","onUnpin","translateY","className","animation","state","unpinSnap","pin","onPin","unfix","onUnfix","action","lastKnownScrollY","scrollDirection","distanceScrolled","abs","disable","pinStart","indexOf","downTolerance","upTolerance","shouldUpdate","this","addEventListener","calcHeightOnResize","nextProps","nextState","shallowequal","prevProps","prevState","children","console","log","removeEventListener","userClassName","divProps","disableInlineStyles","style","wrapperStyle","rest","innerStyle","position","top","left","right","zIndex","WebkitTransform","MsTransform","transform","WebkitTransition","MozTransition","OTransition","transition","wrapperStyles","wrapperClassName","Component","defaultProps","App","setLeftScrollElement","event","scrollLeftElement","target","scrollingPanel","setRightScrollElement","scrollRightElement","getLeftScrollElement","getRightScrollElement","showheader","leftPanelScrollRef","React","createRef","rightPanelScrollRef","current","background","boxShadow","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a56c49e7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react' // eslint-disable-line import/no-unresolved\nimport PropTypes from 'prop-types'\nimport shallowequal from 'shallowequal'\nimport raf from 'raf'\nimport shouldUpdate from './shouldUpdate'\n\nconst noop = () => { }\n\nexport default class Headroom extends Component {\n    static propTypes = {\n        className: PropTypes.string,\n        parent: PropTypes.func,\n        children: PropTypes.any.isRequired,\n        disableInlineStyles: PropTypes.bool,\n        disable: PropTypes.bool,\n        upTolerance: PropTypes.number,\n        downTolerance: PropTypes.number,\n        onPin: PropTypes.func,\n        onUnpin: PropTypes.func,\n        onUnfix: PropTypes.func,\n        wrapperStyle: PropTypes.object,\n        pinStart: PropTypes.number,\n        style: PropTypes.object,\n        calcHeightOnResize: PropTypes.bool,\n    };\n\n    static defaultProps = {\n        parent: () => window,\n        disableInlineStyles: false,\n        disable: false,\n        upTolerance: 5,\n        downTolerance: 0,\n        onPin: noop,\n        onUnpin: noop,\n        onUnfix: noop,\n        wrapperStyle: {},\n        pinStart: 0,\n        calcHeightOnResize: true,\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.disable && state.state !== 'unfixed') {\n            return {\n                translateY: 0,\n                className: 'headroom headroom--unfixed headroom-disable-animation',\n                animation: false,\n                state: 'unfixed',\n            }\n        }\n\n        return null\n    }\n\n    constructor(props) {\n        super(props)\n        // Class variables.\n        this.currentScrollY = 0\n        this.lastKnownScrollY = 0\n        this.scrollTicking = false\n        this.resizeTicking = false\n        this.state = {\n            state: 'unfixed',\n            translateY: 0,\n            className: 'headroom headroom--unfixed',\n        }\n    }\n\n    componentDidMount() {\n        this.setHeightOffset()\n        if (!this.props.disable) {\n            this.props.parent().addEventListener('scroll', this.handleScroll)\n\n            if (this.props.calcHeightOnResize) {\n                this.props.parent().addEventListener('resize', this.handleResize)\n            }\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            !shallowequal(this.props, nextProps) ||\n            !shallowequal(this.state, nextState)\n        )\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        // If children have changed, remeasure height.\n        if (prevProps.children !== this.props.children) {\n            this.setHeightOffset()\n        }\n        // Add/remove event listeners when re-enabled/disabled\n        if (!prevProps.disable && this.props.disable) {\n            console.log('1')\n            this.props.parent().removeEventListener('scroll', this.handleScroll)\n            this.props.parent().removeEventListener('resize', this.handleResize)\n\n            if (prevState.state !== 'unfixed' && this.state.state === 'unfixed') {\n                this.props.onUnfix()\n            }\n        } else if (prevProps.disable && !this.props.disable) {\n            console.log('2')\n            this.props.parent().addEventListener('scroll', this.handleScroll)\n\n            if (this.props.calcHeightOnResize) {\n                this.props.parent().addEventListener('resize', this.handleResize)\n            }\n        }\n        else if (prevProps.parent !== this.props.parent) {\n            console.log('parent changed')\n            prevProps.parent().removeEventListener('scroll', this.handleScroll)\n            this.props.parent().addEventListener('scroll', this.handleScroll)\n        }\n    }\n\n    componentWillUnmount() {\n        this.props.parent().removeEventListener('scroll', this.handleScroll)\n        window.removeEventListener('scroll', this.handleScroll)\n        this.props.parent().removeEventListener('resize', this.handleResize)\n    }\n\n    setRef = ref => (this.inner = ref)\n\n    setHeightOffset = () => {\n        this.setState({\n            height: this.inner ? this.inner.offsetHeight : '',\n        })\n        this.resizeTicking = false\n    }\n\n    getScrollY = () => {\n        if (this.props.parent().pageYOffset !== undefined) {\n            return this.props.parent().pageYOffset\n        } else if (this.props.parent().scrollTop !== undefined) {\n            return this.props.parent().scrollTop\n        } else {\n            return (document.documentElement || document.body.parentNode || document.body).scrollTop\n        }\n    }\n\n    getViewportHeight = () => (\n        window.innerHeight\n        || document.documentElement.clientHeight\n        || document.body.clientHeight\n    )\n\n    getDocumentHeight = () => {\n        const body = document.body\n        const documentElement = document.documentElement\n\n        return Math.max(\n            body.scrollHeight, documentElement.scrollHeight,\n            body.offsetHeight, documentElement.offsetHeight,\n            body.clientHeight, documentElement.clientHeight\n        )\n    }\n\n    getElementPhysicalHeight = elm => Math.max(\n        elm.offsetHeight,\n        elm.clientHeight\n    )\n\n    getElementHeight = elm => Math.max(\n        elm.scrollHeight,\n        elm.offsetHeight,\n        elm.clientHeight,\n    )\n\n    getScrollerPhysicalHeight = () => {\n        const parent = this.props.parent()\n\n        return (parent === window || parent === document.body)\n            ? this.getViewportHeight()\n            : this.getElementPhysicalHeight(parent)\n    }\n\n    getScrollerHeight = () => {\n        const parent = this.props.parent()\n\n        return (parent === window || parent === document.body)\n            ? this.getDocumentHeight()\n            : this.getElementHeight(parent)\n    }\n\n    isOutOfBound = (currentScrollY) => {\n        const pastTop = currentScrollY < 0\n\n        const scrollerPhysicalHeight = this.getScrollerPhysicalHeight()\n        const scrollerHeight = this.getScrollerHeight()\n\n        const pastBottom = currentScrollY + scrollerPhysicalHeight > scrollerHeight\n\n        return pastTop || pastBottom\n    }\n\n    handleScroll = () => {\n        if (!this.scrollTicking) {\n            this.scrollTicking = true\n            raf(this.update)\n        }\n    }\n\n    handleResize = () => {\n        if (!this.resizeTicking) {\n            this.resizeTicking = true\n            raf(this.setHeightOffset)\n        }\n    }\n\n    unpin = () => {\n        this.props.onUnpin()\n\n        this.setState({\n            translateY: '-100%',\n            className: 'headroom headroom--unpinned',\n            animation: true,\n            state: 'unpinned',\n        })\n    }\n\n    unpinSnap = () => {\n        this.props.onUnpin()\n\n        this.setState({\n            translateY: '-100%',\n            className: 'headroom headroom--unpinned headroom-disable-animation',\n            animation: false,\n            state: 'unpinned',\n        })\n    }\n\n    pin = () => {\n        this.props.onPin()\n\n        this.setState({\n            translateY: 0,\n            className: 'headroom headroom--pinned',\n            animation: true,\n            state: 'pinned',\n        })\n    }\n\n    unfix = () => {\n        this.props.onUnfix()\n\n        this.setState({\n            translateY: 0,\n            className: 'headroom headroom--unfixed headroom-disable-animation',\n            animation: false,\n            state: 'unfixed',\n        })\n    }\n\n    update = () => {\n        debugger\n        this.currentScrollY = this.getScrollY()\n\n        if (!this.isOutOfBound(this.currentScrollY)) {\n            const { action } = shouldUpdate(\n                this.lastKnownScrollY,\n                this.currentScrollY,\n                this.props,\n                this.state\n            )\n\n            if (action === 'pin') {\n                this.pin()\n            } else if (action === 'unpin') {\n                this.unpin()\n            } else if (action === 'unpin-snap') {\n                this.unpinSnap()\n            } else if (action === 'unfix') {\n                this.unfix()\n            }\n        }\n\n        this.lastKnownScrollY = this.currentScrollY\n        this.scrollTicking = false\n    }\n\n    render() {\n        const { className: userClassName, ...divProps } = this.props\n        delete divProps.onUnpin\n        delete divProps.onPin\n        delete divProps.onUnfix\n        delete divProps.disableInlineStyles\n        delete divProps.disable\n        delete divProps.parent\n        delete divProps.children\n        delete divProps.upTolerance\n        delete divProps.downTolerance\n        delete divProps.pinStart\n        delete divProps.calcHeightOnResize\n\n        const { style, wrapperStyle, ...rest } = divProps\n\n        let innerStyle = {\n            position: this.props.disable || this.state.state === 'unfixed' ? 'relative' : 'fixed',\n            top: 0,\n            left: 0,\n            right: 0,\n            zIndex: 1,\n            WebkitTransform: `translate3D(0, ${this.state.translateY}, 0)`,\n            MsTransform: `translate3D(0, ${this.state.translateY}, 0)`,\n            transform: `translate3D(0, ${this.state.translateY}, 0)`,\n        }\n\n        let className = this.state.className\n\n        // Don't add css transitions until after we've done the initial\n        // negative transform when transitioning from 'unfixed' to 'unpinned'.\n        // If we don't do this, the header will flash into view temporarily\n        // while it transitions from 0 — -100%.\n        if (this.state.animation) {\n            innerStyle = {\n                ...innerStyle,\n                WebkitTransition: 'all .2s ease-in-out',\n                MozTransition: 'all .2s ease-in-out',\n                OTransition: 'all .2s ease-in-out',\n                transition: 'all .2s ease-in-out',\n            }\n            className += ' headroom--scrolled'\n        }\n\n        if (!this.props.disableInlineStyles) {\n            innerStyle = {\n                ...innerStyle,\n                ...style,\n            }\n        } else {\n            innerStyle = style\n        }\n\n        const wrapperStyles = {\n            ...wrapperStyle,\n            height: this.state.height ? this.state.height : null,\n        }\n\n        const wrapperClassName = userClassName\n            ? `${userClassName} headroom-wrapper`\n            : 'headroom-wrapper'\n\n        return (\n            <div style={wrapperStyles} className={wrapperClassName}>\n                <div\n                    ref={this.setRef}\n                    {...rest}\n                    style={innerStyle}\n                    className={className}\n                >\n                    {this.props.children}\n                </div>\n            </div>\n        )\n    }\n}","export default function (\n    lastKnownScrollY = 0,\n    currentScrollY = 0,\n    props = {},\n    state = {}\n) {\n    const scrollDirection = currentScrollY >= lastKnownScrollY ? 'down' : 'up'\n    const distanceScrolled = Math.abs(currentScrollY - lastKnownScrollY)\n\n    // We're disabled\n    if (props.disable) {\n        return {\n            action: 'none',\n            scrollDirection,\n            distanceScrolled,\n        }\n        // We're at the top and not fixed yet.\n    } else if (currentScrollY <= props.pinStart && state.state !== 'unfixed') {\n        return {\n            action: 'unfix',\n            scrollDirection,\n            distanceScrolled,\n        }\n        // We're unfixed and headed down. Carry on.\n    } else if (\n        currentScrollY <= state.height &&\n        scrollDirection === 'down' &&\n        state.state === 'unfixed'\n    ) {\n        return {\n            action: 'none',\n            scrollDirection,\n            distanceScrolled,\n        }\n    } else if (\n        currentScrollY > (state.height + props.pinStart) &&\n        scrollDirection === 'down' &&\n        state.state === 'unfixed'\n    ) {\n        return {\n            action: 'unpin-snap',\n            scrollDirection,\n            distanceScrolled,\n        }\n        // We're past the header and scrolling down.\n        // We transition to \"unpinned\" if necessary.\n    } else if (\n        scrollDirection === 'down' && ['pinned', 'unfixed'].indexOf(state.state) >= 0 &&\n        currentScrollY > (state.height + props.pinStart) && distanceScrolled > props.downTolerance\n    ) {\n        return {\n            action: 'unpin',\n            scrollDirection,\n            distanceScrolled,\n        }\n        // We're scrolling up, we transition to \"pinned\"\n    } else if (\n        scrollDirection === 'up' &&\n        distanceScrolled > props.upTolerance && ['pinned', 'unfixed'].indexOf(state.state) < 0\n    ) {\n        return {\n            action: 'pin',\n            scrollDirection,\n            distanceScrolled,\n        }\n        // We're scrolling up, and inside the header.\n        // We transition to pin regardless of upTolerance\n    } else if (\n        scrollDirection === 'up' &&\n        currentScrollY <= state.height && ['pinned', 'unfixed'].indexOf(state.state) < 0\n    ) {\n        return {\n            action: 'pin',\n            scrollDirection,\n            distanceScrolled,\n        }\n    } else {\n        return {\n            action: 'none',\n            scrollDirection,\n            distanceScrolled,\n        }\n    }\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Headroom from './react-headroom-forked';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showheader: false,\n      scrollLeftElement: null,\n      scrollRightElement: null,\n      scrollingPanel: 'left'\n    }\n    this.leftPanelScrollRef = React.createRef();\n    this.rightPanelScrollRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.setState({\n      showheader: true,\n      scrollLeftElement: this.leftPanelScrollRef.current,\n      scrollRightElement: this.rightPanelScrollRef.current\n    })\n    this.leftPanelScrollRef.current.addEventListener('scroll', this.setLeftScrollElement)\n    this.rightPanelScrollRef.current.addEventListener('scroll', this.setRightScrollElement)\n  }\n\n  componentWillUnmount() {\n    this.leftPanelScrollRef.current.removeEventListener('scroll', this.setLeftScrollElement)\n    this.rightPanelScrollRef.current.removeEventListener('scroll', this.setRightScrollElement)\n  }\n\n  setLeftScrollElement = (event) => {\n    this.setState({\n      scrollLeftElement: event.target,\n      scrollingPanel: 'left'\n    })\n  }\n\n  setRightScrollElement = (event) => {\n    this.setState({\n      scrollRightElement: event.target,\n      scrollingPanel: 'right'\n    })\n  }\n\n  getLeftScrollElement = () => {\n    return this.state.scrollLeftElement\n  }\n\n  getRightScrollElement = () => {\n    return this.state.scrollRightElement\n  }\n\n  render() {\n    return (\n      <>\n        {this.state.showheader &&\n          <Headroom className=\"header\" style={{\n            background: 'rgb(57, 111, 176)',\n            boxShadow: '1px 1px 1px rgba(0,0,0,0.25)',\n            height: '10vh'\n          }}\n            parent={this.state.scrollingPanel === 'left' ? this.getLeftScrollElement : this.getRightScrollElement}>\n            Test Header\n          </Headroom>\n        }\n        <div className=\"main-container\">\n          <div className=\"left-panel\" ref={this.leftPanelScrollRef}>\n            Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum. It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humor and the like).\n        </div>\n          <div className=\"right-panel\" ref={this.rightPanelScrollRef}>\n            Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum. It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humor and the like).\n        </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}